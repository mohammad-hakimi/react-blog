{"version":3,"sources":["gifs/loading.svg","serviceWorker.js","components/Navbar/index.jsx","components/Banner/index.jsx","components/Article/index.jsx","components/Welcome/Articles/index.jsx","config/index.js","components/Welcome/index.jsx","components/Footer/index.jsx","components/Article/CreateArticle/CreateArticleForm/index.jsx","components/Article/CreateArticle/index.jsx","components/Login/LoginForm/index.jsx","components/Login/index.jsx","components/Article/SingleArticle/SingleArticleContainer/index.jsx","components/Article/SingleArticle/index.jsx","components/Signup/index.jsx","Services/Auth/index.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","user","logout","className","to","src","process","alt","username","onClick","Banner","backgroundImage","title","subtitle","style","data-overlay","Article","article","category","id","slug","name","date","image","content","substring","Articles","handlePagination","articles","pageNumber","loading","map","index","console","log","key","disabled","length","Welcome","props","event","state","setState","target","i","Axios","get","config","response","data","concat","this","React","Component","Footer","ArticleFrom","handleChange","categories","handleSubmit","errors","loadingGif","onSubmit","data-form","type","onChange","placeholder","value","rows","defaultValue","validateAll","CreatArticle","files","forEach","preventDefault","required","then","a","form","FormData","append","post","imageResponse","secure_url","Date","toDateString","history","push","catch","formattedErrors","error","field","message","LoginForm","onChangeHandler","onSubmitClick","password","usernameFlag","passwordFlag","userList","foundUser","localStorage","setItem","JSON","stringify","setAuthUser","success","maxWidth","defaultChecked","Login","SingleArticleContainer","data-scrollto","SingleArticle","params","cSlug","Signup","handleChanges","checkIfEmailIsUnique","email","password_confirmation","logs","componentDidMount","bind","onRegisterClick","respond","setTimeout","Auth","component","isAuthenticated","path","render","routerProps","getItem","App","authUser","removeItem","parse","pathname","exact","Main","withRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad255ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.23721bad.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Navbar = ({user, logout}) => {\n    return (\n        <nav className=\"topbar topbar-inverse topbar-expand-md topbar-sticky\">\n            <div className=\"container\">\n                <div className=\"topbar-left\">\n                    <button className=\"topbar-toggler\">☰</button>\n                    <Link className=\"topbar-brand\" to=\"/\">\n                        <img className=\"logo-default\" src={`${process.env.PUBLIC_URL}/assets/img/logo.png`} alt=\"logo\"/>\n                        <img className=\"logo-inverse\" src={`${process.env.PUBLIC_URL}/assets/img/logo-light.png`}\n                             alt=\"logo\"/>\n                    </Link>\n                </div>\n                <div className=\"topbar-right\">\n                    <ul className=\"topbar-nav nav\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/articles/create\">Write new article</Link>\n                        </li>\n                        {\n                            user &&\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"#\">Hey {user && user.username}!\n                                    <i className=\"fa fa-caret-down\"/>\n                                </Link>\n                                <div className=\"nav-submenu\">\n                                    <Link className=\"nav-link\" to=\"/account/login\">My articles</Link>\n                                    <Link className=\"nav-link\" to=\"/\" onClick={logout}>Logout</Link>\n                                </div>\n                            </li>\n                        }\n                        {\n                            !user &&\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/account/login\">Login</Link>\n                            </li>\n                        }\n                        {\n                            !user &&\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/account/signup\">Signup</Link>\n                            </li>\n                        }\n                    </ul>\n                </div>\n            </div>\n        </nav>\n\n\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n\n\nconst Banner = ({backgroundImage, title, subtitle}) => {\n    return (\n        <header className=\"header header-inverse\" style={{backgroundImage}} data-overlay={8}>\n            <div className=\"container text-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-8 offset-lg-2\">\n                        <h1>{title}</h1>\n                        <p className=\"fs-20 opacity-70\">{subtitle}</p>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n\n}\nexport default Banner;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Article = ({ article }) => {\n    return (\n        <article className=\"mt-90\">\n            <header className=\"text-center mb-40\">\n                <h3>\n                    <Link to={`category/${article.category.id}/article/${article.slug}`}>{article.name}</Link>\n                </h3>\n                <div className=\"link-color-default fs-12\">\n                    <Link to=\"#\">{article.category.name}</Link>,\n                    <time>{article.date}</time>\n                </div>\n            </header>\n            <Link to={`category/${article.category.id}/article/${article.slug}`}>\n                <img className=\"rounded\" src={article.image} alt=\"...\" />\n            </Link>\n            <div className=\"card-block\">\n                <p className=\"text-justify\">{`${article.content.substring(0, 80)} ...`}</p>\n                <p className=\"text-center mt-40\">\n                    <Link className=\"btn btn-primary btn-round\" to={`category/${article.category.id}/article/${article.slug}`}>Read more</Link>\n                </p>\n            </div>\n        </article>\n\n    );\n}\n\nexport default Article;","import Banner from \"../../Banner\";\nimport Article from \"../../Article\";\nimport React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Articles = ({handlePagination, articles, pageNumber, loading}) => {\n    return (\n        <div>\n            <Banner\n                backgroundImage={`url(${process.env.PUBLIC_URL}/assets/img/bg-gift.jpg)`}\n                title=\"Latest Blog Posts\"\n                subtitle=\"Read and get updated on how we progress.\"/>\n            <main className=\"main-content bg-gray\">\n                {\n                    loading ? <h1>Loading...</h1> :\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-6 offset-lg-3\">\n                                {\n                                    articles && articles.map((article, index) => {\n                                        if ((pageNumber - 1) * 5 <= index && index < pageNumber * 5) {\n                                            console.log(index);\n                                            return (\n                                                <div key={article.slug}>\n                                                    <Article article={article}/>\n                                                    <hr/>\n                                                </div>\n                                            );\n                                        }\n                                        return null;\n                                    })\n                                }\n                                <nav className=\"flexbox mt-50 mb-50\">\n                                    <button className=\"btn btn-white\" disabled={pageNumber === 1} name='previous'\n                                            onClick={handlePagination}>\n                                        <i className=\"ti-arrow-left fs-9 ml-4\"/> Previous\n                                    </button>\n                                    <button className=\"btn btn-white\" disabled={articles.length <= pageNumber * 5} name='next' onClick={handlePagination}>\n                                        <i className=\"ti-arrow-right fs-9 ml-4\"/> Next\n                                    </button>\n                                </nav>\n                            </div>\n                        </div>\n                }\n            </main>\n        </div>\n    );\n}\nexport default Articles;","export default {\n    apiUrl: `https://5f81d6b10695720016432f65.mockapi.io`,\n    imageUploadUrl: `https://api.cloudinary.com/v1_1/mohimh/image/upload`\n}","import React from \"react\";\nimport Banner from \"../Banner\";\nimport Article from \"../Article\";\nimport Articles from \"./Articles\";\nimport config from \"../../config\";\nimport Axios from \"axios\";\n\nclass Welcome extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: [],\n            pageNumber: 1,\n            loading: true\n        }\n    }\n\n    handlePagination = (event) => {\n        const pageNumber = this.state.pageNumber;\n        this.setState({pageNumber: event.target.name === 'next' ? pageNumber + 1 : pageNumber - 1})\n        console.log(event.target.name);\n    }\n\n\n    async componentWillMount() {\n        let articles = [];\n        for (let i = 1; i <= 10; i++) {\n            const response = await Axios.get(`${config.apiUrl}/category/${i}/article`);\n            console.log(response.data);\n            articles = articles.concat(response.data);\n        }\n        console.log(articles);\n        this.setState({articles, loading: false});\n\n    }\n\n\n    render() {\n        return (\n            <Articles\n                handlePagination={this.handlePagination}\n                articles={this.state.articles}\n                pageNumber={this.state.pageNumber}\n                loading={this.state.loading}\n            />\n        );\n    }\n\n\n}\n\nexport default Welcome;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row gap-y align-items-center\">\n                    <div className=\"col-12 col-lg-6 offset-lg-3\">\n                        <ul className=\"nav nav-primary nav-hero\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/\">Bahdcasts</Link>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import Banner from \"../../../Banner\";\nimport React from \"react\";\n\n\n\nconst ArticleFrom = ({handleChange, categories, handleSubmit, errors, loadingGif}) => {\n    return (\n        <div>\n            <div>\n                <Banner backgroundImage={`url(${process.env.PUBLIC_URL}/assets/img/bg-laptop.jpg)`}\n                        title={\"Write an article\"}/>\n            </div>\n            <main className=\"main-content\">\n                <section className=\"section\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-12\">\n                                <form className=\"p-30 bg-gray rounded\" onSubmit={handleSubmit} data-form=\"mailer\">\n                                    <div className=\"row\">\n                                        <div className=\"form-group col-md-12 my-5\">\n                                            <input type=\"file\" className=\"form-control\" name=\"image\"\n                                                   onChange={handleChange}/>\n                                            {\n                                                errors.image &&\n                                                <small className=\"text-danger\">\n                                                    {\n                                                        errors.image\n                                                    }\n                                                </small>\n                                            }\n\n                                        </div>\n                                        <div className=\"form-group col-12 col-md-6\">\n                                            <input className=\"form-control form-control-lg\" type=\"text\" name=\"name\"\n                                                   placeholder=\"Title\" onChange={handleChange}/>\n                                            {\n                                                errors.name &&\n                                                <small className=\"text-danger\">\n                                                    {\n                                                        errors.name\n                                                    }\n                                                </small>\n                                            }\n                                        </div>\n                                        <div className=\"form-group col-12 col-md-6\">\n                                            <select name=\"category\" id=\"x\" className=\"form-control form-control-lg\"\n                                                    onChange={handleChange}>\n                                                <option key={-1} value>Select category</option>\n                                                {\n                                                    categories && categories.map(category => {\n                                                        return (\n                                                            <option key={category.id}\n                                                                    value={category.name}>{category.name}</option>\n                                                        );\n                                                    })\n                                                }\n\n                                            </select>\n                                            {\n                                                errors.category &&\n                                                <small className=\"text-danger\">\n                                                    {\n                                                        errors.category\n                                                    }\n                                                </small>\n                                            }\n                                        </div>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className=\"form-control form-control-lg\" rows={4}\n                                            placeholder=\"Content\" name=\"content\" defaultValue={\"\"}\n                                            onChange={handleChange}\n                                        />\n                                        {\n                                            errors.content &&\n                                            <small className=\"text-danger\">\n                                                {\n                                                    errors.content\n                                                }\n                                            </small>\n                                        }\n                                    </div>\n                                    <div className=\"text-center\">\n                                        <button className=\"btn btn-lg btn-primary w-200\" type=\"submit\">\n                                            {\n                                                loadingGif? <img className=\"w-20\" src={loadingGif} alt=\"\"/>: 'Create Article'\n                                            }\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </main>\n        </div>\n\n    );\n}\n\nexport default ArticleFrom;","import React from \"react\";\nimport Banner from \"../../Banner\";\nimport {Link} from \"react-router-dom\";\nimport CreateArticleFrom from \"./CreateArticleForm\";\nimport config from '../../../config'\nimport Axios from \"axios\";\nimport loadingGif from '../../../gifs/loading.svg';\nconst {validateAll} = window;\n\nexport default class CreatArticle extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: '',\n            name: '',\n            image: null,\n            category: null,\n            categories: null,\n            errors: {},\n            loading: false\n        }\n    }\n\n    async componentDidMount() {\n        const response = await Axios.get(`${config.apiUrl}/category`);\n        this.setState({\n            categories: response.data\n        });\n    }\n\n    handleChange = (event) => {\n        if (event.target.name !== 'category') {\n            this.setState({\n                [event.target.name]: event.target.type === 'file' ? event.target.files[0] : event.target.value\n            })\n        } else{\n            let id;\n            this.state.categories.forEach((category) =>{\n                if (category.name === event.target.value){\n                    id = category.id;\n                }\n            })\n            this.setState({\n                category:{\n                    name: event.target.value,\n                    id\n                }\n            })\n        }\n        console.log(this.state);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.setState({loading: true});\n        const data = this.state;\n\n        const rules = {\n            name: 'required|min:3|string',\n            image: 'required',\n            content: 'required|min:10|string',\n            category: 'required'\n        }\n\n        const message = {\n            required: 'The {{ field }} is required.',\n            \"name.min\": 'The name must be at least 3 characters.',\n            \"content.min\": 'The content must be at least 10 characters.',\n        }\n\n        validateAll(data, rules, message)\n            .then(async () => {\n                const form = new FormData();\n                form.append('file', data.image);\n                form.append('upload_preset', 'mPreset');\n                const imageResponse = await Axios.post(`${config.imageUploadUrl}`, form);\n                await Axios.post(`${config.apiUrl}/category/${data.category.id}/article`,{\n                    name: data.name,\n                    content: data.content,\n                    image: imageResponse.data.secure_url,\n                    category: data.category,\n                    date: new Date().toDateString()\n                });\n                this.setState({loading: false});\n                this.props.history.push('/');\n\n            })\n            .catch((errors) => {\n                const formattedErrors = {}\n                errors.forEach(error => {\n                    formattedErrors[error.field] = error.message\n                });\n                this.setState({\n                    errors: formattedErrors,\n                    loading: false\n                })\n            })\n    }\n\n    render() {\n        return (\n            <CreateArticleFrom\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                categories={this.state.categories}\n                errors={this.state.errors}\n                loadingGif={this.state.loading?loadingGif:null}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport loadingGif from '../../../gifs/loading.svg';\nimport Axios from \"axios\";\nimport config from \"../../../config\";\n\nconst {validateAll} = window;\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            success: false,\n            loading: false,\n            userList: [],\n            errors: {}\n\n        }\n    }\n\n\n\n    onChangeHandler = (event) => {\n        this.setState({\n            errors: {},\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onSubmitClick = (event) => {\n        event.preventDefault();\n        const data = this.state;\n        this.setState({\n            errors:{},\n            loading: true,\n        });\n        const rules = {\n            username: 'required|string',\n            password: 'required|string|min:6'\n        }\n        const message = {\n            required: 'The {{field}} is required',\n            'password.min':'The password must be at least 6 characters',\n        }\n        validateAll(data, rules, message)\n            .then(async () => {\n                let usernameFlag = false;\n                let passwordFlag = false;\n                let foundUser;\n                const response = await Axios.get(`${config.apiUrl}/user`);\n                this.setState({\n                    userList: response.data\n                });\n                this.state.userList.forEach((user) => {\n                    if (user.username === data.username){\n                        usernameFlag = true;\n                        if (user.password === data.password){\n                            passwordFlag = true;\n                            foundUser = user;\n                        }\n                    }\n\n                })\n                if (usernameFlag && passwordFlag){\n                    localStorage.setItem('user', JSON.stringify(foundUser));\n                    this.props.setAuthUser(foundUser);\n                    this.props.history.push('/');\n\n                } else if ((!usernameFlag && passwordFlag) || (!usernameFlag && !passwordFlag)){\n                    this.setState({\n                        errors: {\n                            username: 'The username does not exist',\n                        },\n                        loading: false\n                    });\n                } else if (usernameFlag && !passwordFlag){\n                    this.setState({\n                        errors: {\n                            password: 'The password is wrong',\n                        },\n                        loading: false\n\n                    });\n                }\n            })\n            .catch((errors) => {\n                const formattedErrors = {}\n                errors.forEach((error) => {\n                    formattedErrors[error.field] = error.message\n                });\n                this.setState({\n                    errors: formattedErrors,\n                    loading: false,\n                })\n            });\n\n    }\n\n    render() {\n        return (\n            <div className=\"mh-fullscreen bg-img center-vh p-20\"\n                 style={{backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/bg-girl.jpg)`}}>\n                <div className=\"card card-shadowed p-50 w-400 mb-0\" style={{maxWidth: '100%'}}>\n                    <h5 className=\"text-uppercase text-center\">Login</h5>\n                    <br/><br/>\n                    <form onSubmit={this.onSubmitClick}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Username\" name=\"username\"\n                                   onChange={this.onChangeHandler} value={this.state.username}/>\n                            {\n                                this.state.errors.username &&\n                                <small className=\"text-danger\">\n                                    {\n                                        this.state.errors.username\n                                    }\n                                </small>\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\"\n                                   onChange={this.onChangeHandler} value={this.state.password}/>\n                            {\n                                this.state.errors.password &&\n                                <small className=\"text-danger\">\n                                    {\n                                        this.state.errors.password\n                                    }\n                                </small>\n                            }\n                        </div>\n                        <div className=\"form-group flexbox py-10\">\n                            <label className=\"custom-control custom-checkbox\">\n                                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked/>\n                                <span className=\"custom-control-indicator\"/>\n                                <span className=\"custom-control-description\">Remember me</span>\n                            </label>\n                            <Link className=\"text-muted hover-primary fs-13\" to=\"#\">Forgot password?</Link>\n                        </div>\n                        <div className=\"form-group\">\n                            <button className=\"btn btn-bold btn-block btn-primary\"\n                                    type=\"submit\"\n                                    disabled={this.state.loading}>\n                                {this.state.loading ? <img src={loadingGif} alt=\"\" className=\"w-20\"/>: \"Login\"}\n                            </button>\n                        </div>\n                    </form>\n                    <hr className=\"w-30\"/>\n                    <p className=\"text-center text-muted fs-13 mt-20\">Don't have an account? <Link\n                        to={'/account/signup'}>Sign\n                        up</Link></p>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default LoginForm;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport LoginForm from './LoginForm'\n\n\nconst Login = (props) => {\n    return (\n       <LoginForm {...props} setAuthUser={props.setAuthUser}/>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst SingleArticleContainer = ({ article }) => {\n    return (\n        <div>\n            <header className=\"header header-inverse h-fullscreen pb-80\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/bg-cup.jpg)`}} data-overlay={8}>\n                <div className=\"container text-center\">\n                    <div className=\"row h-full\">\n                        <div className=\"col-12 col-lg-8 offset-lg-2 align-self-center\">\n                            <p className=\"opacity-70\">{article.category.name}</p>\n                            <br />\n                            <h1 className=\"display-4 hidden-sm-down\">{article && article.name}</h1>\n                            <h1 className=\"hidden-md-up\">{article && article.name}</h1>\n                            <br />\n                            <br />\n                            <p>\n                                <span className=\"opacity-70 mr-8\">By</span>\n                                <Link className=\"text-white\" to=\"#\">Hossein Shams</Link>\n                            </p>\n                            <p>\n                                <img className=\"rounded-circle w-40\" src={`${process.env.PUBLIC_URL}/assets/img/avatar/2.jpg`} alt=\"...\" />\n                            </p>\n                        </div>\n                        <div className=\"col-12 align-self-end text-center\">\n                            <Link className=\"scroll-down-1 scroll-down-inverse\" to=\"#\" data-scrollto=\"section-content\">\n                                <span />\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <main className=\"main-content\">\n                <div className=\"section\" id=\"section-content\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-lg-8 offset-lg-2\">\n                                {\n                                    article && article.content\n                                }\n                            </div>\n                        </div>\n                        <br />\n                        <p>\n                            <img src={article && `${article.image}`} alt=\"...\" />\n                        </p>\n                        </div>\n                </div>\n\n                <div className=\"section bt-1 bg-grey\">\n                    <div className=\"container\">\n                        <div className=\"row text-center\">\n                            <div className=\"text-center p-5\">\n                                COMMENTS HERE.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n\n\n    );\n}\n\nexport default SingleArticleContainer;","import React from \"react\";\nimport SingleArticleContainer from \"./SingleArticleContainer\";\nimport Axios from \"axios\";\nimport config from \"../../../config\"\n\nclass SingleArticle extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            article: null\n        }\n\n    }\n\n    async componentDidMount() {\n        const article = await Axios.get(`${config.apiUrl}/category/${this.props.match.params.cSlug}/article/${this.props.match.params.slug}`);\n        this.setState( { article: article.data });\n\n    }\n\n    render() {\n        return (\n            this.state.article &&\n            <SingleArticleContainer article={this.state.article}/>\n        );\n    }\n}\n\nexport default SingleArticle;","import React, {Component} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Axios from 'axios';\nimport config from '../../config';\nimport loadingGif from '../../gifs/loading.svg';\n\nconst {validateAll} = window;\n\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userList: [],\n            username: '',\n            password: '',\n            password_confirmation: '',\n            email: '',\n            errors: {},\n            loading: false,\n            success: false,\n            logs: ''\n\n        };\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.checkIfEmailIsUnique = this.checkIfEmailIsUnique.bind(this);\n        this.onRegisterClick = this.onRegisterClick.bind(this);\n\n    }\n\n    handleChanges = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    async componentDidMount() {\n        const respond = await Axios.get(`https://5f81d6b10695720016432f65.mockapi.io/user`);\n        this.setState({\n            userList: respond.data\n        });\n    }\n\n    onRegisterClick(event) {\n        event.preventDefault();\n        this.setState({loading: true});\n        if (this.checkIfEmailIsUnique) {\n            const data = this.state;\n            const rules = {\n                username: 'required|string',\n                email: 'required|email',\n                password: 'required|string|min:6|confirmed',\n            }\n\n            const messages = {\n                required: 'The {{ field }} is required',\n                'email.email': 'This email is invalid',\n                'password.confirmed': 'The password confirmation does not match'\n            }\n            const formattedErrors = {};\n            let respond = {};\n            validateAll(data, rules, messages)\n                .then(async () => {\n                    respond = await Axios.post(`${config.apiUrl}/user`, {\n                        username: this.state.username,\n                        email: this.state.email,\n                        password: this.state.password\n                    });\n                    console.log(respond);\n                    localStorage.setItem('user', respond.config.data);\n                    const userList = this.state.userList;\n                    userList.push(respond.data);\n                    this.setState({\n                        userList: userList,\n                        loading: false,\n                        success: true\n                    });\n                    this.props.setAuthUser(respond.data);\n                    setTimeout(() => {\n                        this.props.history.push('/')\n                    }, 2000);\n                }).catch((errors) => {\n                    errors.forEach((error) => {\n                        formattedErrors[error.field] = error.message\n                    });\n                    this.setState({\n                        errors: formattedErrors,\n                        loading: false\n                    });\n                }\n            );\n        }\n    }\n\n\n    checkIfEmailIsUnique = () => {\n        for (let i = 0; i < this.state.userList.length; i++) {\n            if (this.state.email === this.state.userList[i].email) {\n                this.setState({loading: false, errors: {email: \"This email has already been taken.\"}});\n                return false;\n            }\n        }\n        // console.log(true);\n        return true;\n    }\n\n\n    render() {\n        return (\n            <div className=\"mh-fullscreen bg-img center-vh p-20\"\n                 style={{backgroundImage: `url(${process.env.PUBLIC_URL}/assets/img/bg-girl.jpg)`}}>\n                <div className=\"card card-shadowed p-50 w-400 mb-0\" style={{maxWidth: '100%'}}>\n                    <h5 className=\"text-uppercase text-center\">Register</h5>\n                    <br/>\n                    <br/>\n                    <form className=\"form-type-material\" onSubmit={this.onRegisterClick}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Username\"\n                                   value={this.state.username} onChange={this.handleChanges}/>\n                            {\n                                this.state.errors.username &&\n                                <small className=\"text-danger\">{this.state.errors[\"username\"]}</small>\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" name=\"email\" className=\"form-control\" placeholder=\"Email address\"\n                                   value={this.state.email} onChange={this.handleChanges}/>\n                            {\n                                this.state.errors[\"email\"] &&\n                                <small className=\"text-danger\">{this.state.errors[\"email\"]}</small>\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\"\n                                   value={this.state.password} onChange={this.handleChanges}/>\n                            {\n                                this.state.errors[\"password\"] &&\n                                <small className=\"text-danger\">{this.state.errors[\"password\"]}</small>\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" name=\"password_confirmation\" className=\"form-control\"\n                                   placeholder=\"Password (confirm)\"\n                                   value={this.state.password_confirmation} onChange={this.handleChanges}/>\n                        </div>\n                        <br/>\n                        <button className=\"btn btn-bold btn-block btn-primary\" disabled={this.state.loading}\n                                type=\"submit\">\n                            {!this.state.loading ? 'Register' : <img className=\"w-20\" src={loadingGif} alt=\"\"/>}\n                        </button>\n                        <small className=\"text-success\">{this.state.success && \"Registration was successful.\"}</small>\n                    </form>\n                    <hr className=\"w-30\"/>\n                    <p className=\"text-center text-muted fs-13 mt-20\">Already have an account?\n                        <Link to={`/account/login`}>Sign in</Link>\n                    </p>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Signup;","import React from \"react\";\nimport {Redirect, Route} from \"react-router\";\nimport Login from \"../../components/Login\";\n\n\nconst Auth = ({component: Component, isAuthenticated, path, props}) => {\n    return (\n        <Route\n            path={path}\n            render={routerProps => {\n                if (isAuthenticated || localStorage.getItem('user')) {\n                    return (\n                        <Component {...props} {...routerProps} />\n                    );\n                } else {\n                    return (\n                        <Redirect to=\"/account/login\"/>\n                    );\n                }\n            }}\n        />\n\n    );\n\n\n}\n\nexport default Auth;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, Redirect, Route, withRouter} from \"react-router-dom\";\nimport Navbar from './components/Navbar'\nimport Welcome from \"./components/Welcome\";\nimport Footer from \"./components/Footer\";\nimport CreatArticle from \"./components/Article/CreateArticle\";\nimport Login from \"./components/Login\";\nimport SingleArticle from \"./components/Article/SingleArticle\";\nimport Signup from \"./components/Signup\";\nimport Auth from \"./Services/Auth\";\n\n\nclass App extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            authUser: null\n        }\n\n    }\n    componentDidMount() {\n        this.setState({\n            authUser: JSON.parse(localStorage.getItem('user'))\n        });\n    }\n\n    setAuthUser = (authUser) => {\n        this.setState({\n            authUser\n        })\n    }\n\n    logout = () => {\n        localStorage.removeItem('user');\n        this.setState({ authUser: null })\n\n    }\n\n\n\n    render() {\n        const location = this.props.location;\n\n        return (\n            <div>\n                {\n                    (location.pathname !== '/account/login'  && location.pathname !== '/account/signup') &&\n                    <Navbar user={this.state.authUser} logout={this.logout}/>\n                }\n                <Route exact path=\"/\" render={(props => <Welcome {...props}/> )}/>\n                <Auth\n                    component={CreatArticle}\n                    path=\"/articles/create\"\n                    isAuthenticated={this.state.authUser !== null}\n                    props={{\n                        authUser: this.state.authUser? this.state.authUser: null,\n                        setAuthUser: this.setAuthUser\n                    }}\n                />\n                <Route path=\"/account/login\" render={(props) => <Login {...props} setAuthUser={this.setAuthUser}/>}/>\n                <Route path=\"/category/:cSlug/article/:slug\" render={props => <SingleArticle {...props}/> } />\n                <Route path=\"/account/signup\" render={(props) => <Signup {...props} setAuthUser={this.setAuthUser}/>}/>\n                {\n                    (location.pathname !== '/account/login'  && location.pathname !== '/account/signup') &&\n                    <Footer />\n                }\n            </div>\n\n        );\n    }\n}\n\n\nconst Main = withRouter((props) => {\n    return (\n        <App {...props}/>\n    );\n})\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Main/>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}